{"version":3,"sources":["@core/components/sidebar/index.js","views/apps/user/list/Sidebar.js","views/apps/user/list/columns.js","views/apps/user/list/Tabs.js","views/apps/user/list/Table.js","@core/components/widgets/stats/StatsHorizontal.js","views/apps/user/list/index.js"],"names":["Sidebar","props","open","size","title","width","children","closeBtn","className","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","renderCloseBtn","onClick","isOpen","toggle","classnames","modalClassName","undefined","style","String","close","tag","options","wheelPropagation","defaultValues","email","contact","company","fullName","username","country","countryOptions","label","value","SidebarNewUsers","useState","data","setData","plan","setPlan","role","setRole","dispatch","useDispatch","useForm","control","setValue","setError","handleSubmit","errors","formState","onClosed","key","onSubmit","Object","values","every","field","length","checkIsValid","addUser","avatar","status","currentPlan","billing","type","for","name","render","id","placeholder","invalid","color","isClearable","classNamePrefix","theme","selectThemeColors","onChange","e","target","outline","renderClient","row","img","height","initials","avatarColor","content","fullname","statusObj","danger","success","archive","columns","sortable","minWidth","sortField","selector","cell","to","store","getUser","group","renderGroup","subscription","balance","money_balance","status_color","pill","Link","href","preventDefault","deleteUser","Tabs","activeTab","toggleTab","pills","active","CustomHeader","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","result","keys","join","forEach","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","xl","justifyContent","htmlFor","marginRight","caret","UsersList","useSelector","state","users","sort","setSort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","rowsPerPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentLessons","setCurrentLessons","currentBalance","setCurrentBalance","number","currentStatus","setCurrentStatus","useEffect","getAllData","getData","q","page","perPage","lessons","handlePerPage","parseInt","currentTarget","tab","setTab","md","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","slice","dataToRender","subHeaderComponent","val","StatsHorizontal","icon","stats","renderStats","statTitle","statsMargin","lg","sm","Table"],"mappings":"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","file":"static/js/17.c43ee0a1.chunk.js","sourcesContent":["// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames('overflow-hidden', {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames('flex-grow-1', {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** React Import\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\n\n// ** Store & Actions\nimport { addUser } from '../store'\nimport { useDispatch } from 'react-redux'\n\nconst defaultValues = {\n  email: '',\n  contact: '',\n  company: '',\n  fullName: '',\n  username: '',\n  country: null\n}\n\nconst countryOptions = [\n  { label: 'Australia', value: 'Australia' },\n  { label: 'Bangladesh', value: 'Bangladesh' },\n  { label: 'Belarus', value: 'Belarus' },\n  { label: 'Brazil', value: 'Brazil' },\n  { label: 'Canada', value: 'Canada' },\n  { label: 'China', value: 'China' },\n  { label: 'France', value: 'France' },\n  { label: 'Germany', value: 'Germany' },\n  { label: 'India', value: 'India' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Israel', value: 'Israel' },\n  { label: 'Italy', value: 'Italy' },\n  { label: 'Japan', value: 'Japan' },\n  { label: 'Korea', value: 'Korea' },\n  { label: 'Mexico', value: 'Mexico' },\n  { label: 'Philippines', value: 'Philippines' },\n  { label: 'Russia', value: 'Russia' },\n  { label: 'South', value: 'South' },\n  { label: 'Thailand', value: 'Thailand' },\n  { label: 'Turkey', value: 'Turkey' },\n  { label: 'Ukraine', value: 'Ukraine' },\n  { label: 'United Arab Emirates', value: 'United Arab Emirates' },\n  { label: 'United Kingdom', value: 'United Kingdom' },\n  { label: 'United States', value: 'United States' }\n]\n\nconst checkIsValid = data => {\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\n}\n\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\n  // ** States\n  const [data, setData] = useState(null)\n  const [plan, setPlan] = useState('basic')\n  const [role, setRole] = useState('subscriber')\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** Vars\n  const {\n    control,\n    setValue,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  // ** Function to handle form submit\n  const onSubmit = data => {\n    setData(data)\n    if (checkIsValid(data)) {\n      toggleSidebar()\n      dispatch(\n        addUser({\n          role,\n          avatar: '',\n          status: 'active',\n          email: data.email,\n          currentPlan: plan,\n          billing: 'auto debit',\n          company: data.company,\n          contact: data.contact,\n          fullName: data.fullName,\n          username: data.username,\n          country: data.country.value\n        })\n      )\n    } else {\n      for (const key in data) {\n        if (data[key] === null) {\n          setError('country', {\n            type: 'manual'\n          })\n        }\n        if (data[key] !== null && data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  const handleSidebarClosed = () => {\n    for (const key in defaultValues) {\n      setValue(key, '')\n    }\n    setRole('subscriber')\n    setPlan('basic')\n  }\n\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title='New User'\n      headerClassName='mb-1'\n      contentClassName='pt-0'\n      toggleSidebar={toggleSidebar}\n      onClosed={handleSidebarClosed}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <div className='mb-1'>\n          <Label className='form-label' for='fullName'>\n            Full Name <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='fullName'\n            control={control}\n            render={({ field }) => (\n              <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='username'>\n            Username <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='username'\n            control={control}\n            render={({ field }) => (\n              <Input id='username' placeholder='johnDoe99' invalid={errors.username && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='userEmail'>\n            Email <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='email'\n            control={control}\n            render={({ field }) => (\n              <Input\n                type='email'\n                id='userEmail'\n                placeholder='john.doe@example.com'\n                invalid={errors.email && true}\n                {...field}\n              />\n            )}\n          />\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        </div>\n\n        <div className='mb-1'>\n          <Label className='form-label' for='contact'>\n            Contact <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='contact'\n            control={control}\n            render={({ field }) => (\n              <Input id='contact' placeholder='(397) 294-5153' invalid={errors.contact && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='company'>\n            Company <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='company'\n            control={control}\n            render={({ field }) => (\n              <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='country'>\n            Country <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='country'\n            control={control}\n            render={({ field }) => (\n              // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n              <Select\n                isClearable={false}\n                classNamePrefix='select'\n                options={countryOptions}\n                theme={selectThemeColors}\n                className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\n                {...field}\n              />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='user-role'>\n            User Role\n          </Label>\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\n            <option value='subscriber'>Subscriber</option>\n            <option value='editor'>Editor</option>\n            <option value='maintainer'>Maintainer</option>\n            <option value='author'>Author</option>\n            <option value='admin'>Admin</option>\n          </Input>\n        </div>\n        <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\n          <Label className='form-label' for='select-plan'>\n            Select Plan\n          </Label>\n          <Input type='select' id='select-plan' name='select-plan'>\n            <option value='basic'>Basic</option>\n            <option value='enterprise'>Enterprise</option>\n            <option value='company'>Company</option>\n            <option value='team'>Team</option>\n          </Input>\n        </div>\n        <Button type='submit' className='me-1' color='primary'>\n          Submit\n        </Button>\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\n          Cancel\n        </Button>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarNewUsers\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\nimport { getUser, deleteUser } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Users } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row?.avatar?.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row?.avatarColor || 'light-primary'}\n        content={row?.fullname || 'No name'}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderGroup = row => {\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Users size={18} className={'text-primary me-50'} />\n      {row?.title || '-'}\n    </span>\n  )\n}\n\nconst statusObj = {\n  danger: 'light-warning',\n  success: 'light-success',\n  archive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'Пользователь',\n    sortable: true,\n    minWidth: '300px',\n    sortField: 'fullname',\n    selector: row => row.fullname,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/apps/user/view/${row.id}`}\n            className='user_name text-truncate text-body'\n            onClick={() => store.dispatch(getUser(row.id))}\n          >\n            <span className='fw-bolder'>{row.fullname}</span>\n          </Link>\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Группа',\n    sortable: true,\n    minWidth: '172px',\n    sortField: 'group',\n    selector: row => row.group,\n    cell: row => renderGroup(row.group)\n  },\n  {\n    name: 'Абонемент',\n    minWidth: '138px',\n    sortable: true,\n    sortField: 'subscription',\n    selector: row => row.subscription,\n    cell: row => <span className='text-capitalize'>{row?.subscription?.title || '-'}</span>\n  },\n  {\n    name: 'Остаток баланса',\n    minWidth: '230px',\n    sortable: true,\n    sortField: 'balance',\n    selector: row => row.balance,\n    cell: row => (\n      <span className={row?.balance?.money_balance > 2000 ? 'text-capitalize' : 'text-capitalize text-danger'}>\n        {row?.balance?.money_balance || 0}\n      </span>\n    )\n  },\n  {\n    name: 'Статус',\n    minWidth: '138px',\n    sortable: true,\n    sortField: 'status',\n    selector: row => row.status,\n    cell: row => (\n      <Badge className='text-capitalize' color={statusObj[row.status_color]} pill>\n        {row.status}\n      </Badge>\n    )\n  },\n  {\n    name: 'Actions',\n    minWidth: '100px',\n    cell: row => (\n      <div className='column-action'>\n        <UncontrolledDropdown>\n          <DropdownToggle tag='div' className='btn btn-sm'>\n            <MoreVertical size={14} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem\n              tag={Link}\n              className='w-100'\n              to={`/apps/user/view/${row.id}`}\n              onClick={() => store.dispatch(getUser(row.id))}\n            >\n              <FileText size={14} className='me-50' />\n              <span className='align-middle'>Детали</span>\n            </DropdownItem>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Archive size={14} className='me-50' />\n              <span className='align-middle'>Редактировать</span>\n            </DropdownItem>\n            <DropdownItem\n              tag='a'\n              href='/'\n              className='w-100'\n              onClick={e => {\n                e.preventDefault()\n                store.dispatch(deleteUser(row.id))\n              }}\n            >\n              <Trash2 size={14} className='me-50' />\n              <span className='align-middle'>Удалить</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    )\n  }\n]\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { User, Lock, Bookmark, Link, Bell } from 'react-feather'\r\n\r\nconst Tabs = ({ activeTab, toggleTab }) => {\r\n  return (\r\n    <Nav pills className='mb-2'>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '1'} onClick={() => toggleTab('1')}>\r\n          <User size={18} className='me-50' />\r\n          <span className='fw-bold'>Ученик</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '2'} onClick={() => toggleTab('2')}>\r\n          <Lock size={18} className='me-50' />\r\n          <span className='fw-bold'>Учитель</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '3'} onClick={() => toggleTab('3')}>\r\n          <Bookmark size={18} className='me-50' />\r\n          <span className='fw-bold'>Менеджер</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\nimport Sidebar from './Sidebar'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getAllData, getData } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Trash, Archive, Move} from 'react-feather'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, Input, Label, Button, CardBody, CardTitle, CardHeader, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown, ButtonGroup } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nimport Tabs from './Tabs'\nimport { Link } from 'react-router-dom'\n\n// ** Table Header\nconst CustomHeader = ({ store, toggleSidebar, handleFilter, searchTerm }) => {\n  // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = ','\n    const lineDelimiter = '\\n'\n    const keys = Object.keys(store.data[0])\n\n    result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach(item => {\n      let ctr = 0\n      keys.forEach(key => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = 'export.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n  }\n  \n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='12' className='d-flex align-items-center p-0' style={{justifyContent: 'space-between'}}>\n          \n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Поиск\n            </label>\n            <Input\n              id='search-invoice'\n              className='ms-50 w-100'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className='d-flex align-items-center table-header-actions'>\n            <label className='mb-0' style={{marginRight: '10px'}}>\n              Действие\n            </label>\n            <UncontrolledDropdown className='me-1'>\n              <DropdownToggle color='secondary' caret outline>\n                <Move className='font-small-4 me-50' />\n                <span className='align-middle'>Действия</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem className='w-100'>\n                  <Archive className='font-small-4 me-50' />\n                  <span className='align-middle'>Архивировать</span>\n                </DropdownItem>\n                <DropdownItem className='w-100' onClick={() => downloadCSV(store.data)}>\n                  <Trash className='font-small-4 me-50' />\n                  <span className='align-middle'>Удалить</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <Link to={'/manager/user/add/'}>\n              <Button className='add-new-user' color='primary'>\n                Добавить пользователя\n              </Button>\n            </Link>\n          </div>\n\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.users)\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentLessons, setCurrentLessons] = useState({ value: '', label: 'Выберете Урок' })\n  const [currentBalance, setCurrentBalance] = useState({ value: '', label: 'Выберете Баланс' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Выберете Статус', number: 0 })\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        lessons: currentLessons.value,\n        status: currentStatus.value,\n        currentBalance: currentBalance.value\n      })\n    )\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\n\n  // ** User filter options\n  const lessonsOption = [\n    { value: '', label: 'Выберете остаток уроков' },\n    { value: '1', label: 'Менее 1' },\n    { value: '2', label: 'Менее 2' },\n    { value: '3', label: 'Менее 3' },\n    { value: '4', label: 'Менее 4' },\n    { value: '5', label: 'Менее 5' },\n    { value: '6', label: 'Менее 6' },\n    { value: '7', label: 'Менее 7' },\n    { value: '8', label: 'Менее 8' },\n    { value: '9', label: 'Менее 9' },\n    { value: '10', label: 'Менее 10' }\n  ]\n\n  const balanceOptions = [\n    { value: '', label: 'Выберете остаток баланса' },\n    { value: '0-1000', label: 'от 0 до 1000' },\n    { value: '1000-2000', label: 'от 1000 до 2000' },\n    { value: '2000-3000', label: 'от 2000 до 3000' },\n    { value: '3000-4000', label: 'от 3000 до 4000' }\n  ]\n\n  const statusOptions = [\n    { value: '', label: 'Выберете статус', number: 0 },\n    { value: 'ACTIVE', label: 'Активный', number: 1 },\n    { value: 'PAUSE', label: 'На паузе', number: 2 },\n    { value: 'ARCHIVE', label: 'Архивный', number: 3 },\n    { value: 'CANCELED', label: 'Отказ', number: 3 }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        lessons: currentLessons.value,\n        status: currentStatus.value,\n        currentBalance: currentBalance.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: currentPage,\n        lessons: currentLessons.value,\n        currentBalance: currentBalance.value,\n        status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        lessons: currentLessons.value,\n        status: currentStatus.value,\n        currentBalance: currentBalance.value\n      })\n    )\n  }\n\n  // ** Custom Pagination and PerPageFilter\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <Card>\n        <CardBody>\n          <Col xl='12' className='d-flex align-items-center p-0'>\n\n            <div className='d-flex align-items-center w-100'>\n              <label htmlFor='rows-per-page'>Show</label>\n              <Input\n                className='mx-50'\n                type='select'\n                id='rows-per-page'\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{ width: '5rem' }}\n              >\n                <option value='1'>1</option>\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n              </Input>\n              <label htmlFor='rows-per-page'>Entries</label>\n            </div>\n\n            <ReactPaginate\n              previousLabel={''}\n              nextLabel={''}\n              pageCount={count || 1}\n              activeClassName='active'\n              forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n              onPageChange={page => handlePagination(page)}\n              pageClassName={'page-item'}\n              nextLinkClassName={'page-link'}\n              nextClassName={'page-item next'}\n              previousClassName={'page-item prev'}\n              previousLinkClassName={'page-link'}\n              pageLinkClassName={'page-link'}\n              containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n            />\n            \n          </Col>\n        </CardBody>\n      </Card>\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      lessons: currentLessons.value,\n      currentBalance: currentBalance.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    \n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.data.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        lessons: currentLessons.value,\n        status: currentStatus.value,\n        currentBalance: currentBalance.value\n      })\n    )\n  }\n\n  const [tab, setTab] = useState('1')\n\n  return (\n    <Fragment>\n\n      <Tabs activeTab={tab} toggleTab={setTab}/>\n\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Поиск & Фильтр</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Label for='role-select'>Остаток уроков</Label>\n              <Select\n                isClearable={false}\n                value={currentLessons}\n                options={lessonsOption}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                onChange={data => {\n                  setCurrentLessons(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      lessons: data.value,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      status: currentStatus.value,\n                      currentBalance: currentBalance.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n            <Col className='my-md-0 my-1' md='4'>\n              <Label for='plan-select'>Остаток баланса</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={balanceOptions}\n                value={currentBalance}\n                onChange={data => {\n                  setCurrentBalance(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      lessons: currentLessons.value,\n                      currentBalance: data.value,\n                      status: currentStatus.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n            <Col md='4'>\n              <Label for='status-select'>Статус</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentStatus}\n                onChange={data => {\n                  setCurrentStatus(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      status: data.value,\n                      perPage: rowsPerPage,\n                      lessons: currentLessons.value,\n                      currentBalance: currentBalance.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            subHeader\n            sortServer\n            pagination\n            responsive\n            paginationServer\n            columns={columns}\n            onSort={handleSort}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n            subHeaderComponent={\n              <CustomHeader\n                store={store}\n                searchTerm={searchTerm}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                toggleSidebar={toggleSidebar}\n              />\n            }\n          />\n        </div>\n      </Card>\n\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { Cpu, Activity, Server, AlertCircle } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Повторный абонемент'\n            icon={<Cpu size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>66%</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Купленных абонементов'\n            icon={<Server size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>108</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Эффективность'\n            icon={<Activity size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>85%</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Отказов'\n            icon={<AlertCircle size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>13</h3>}\n          />\n        </Col>\n      </Row>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n"],"sourceRoot":""}