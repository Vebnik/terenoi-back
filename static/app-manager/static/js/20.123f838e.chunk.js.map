{"version":3,"sources":["@core/components/input-password-toggle/index.js","views/pages/authentication/Register.js"],"names":["InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","size","renderIcon","defaultProps","defaultValues","email","terms","username","password","Register","ability","useContext","AbilityContext","skin","useSkin","navigate","useNavigate","dispatch","useDispatch","useForm","control","setError","handleSubmit","errors","formState","illustration","source","require","default","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","action","onSubmit","data","tempData","Object","values","every","field","length","useJwt","register","then","res","error","property","message","user","accessToken","update","handleLogin","catch","err","console","log","key","name","render","autoFocus","checked","value","href","block","color"],"mappings":"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","file":"static/js/20.123f838e.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardTitle, CardText, Label, Button, Form, Input, FormFeedback } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst defaultValues = {\r\n  email: '',\r\n  terms: false,\r\n  username: '',\r\n  password: ''\r\n}\r\n\r\nconst Register = () => {\r\n  // ** Hooks\r\n  const ability = useContext(AbilityContext)\r\n  const { skin } = useSkin()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    const tempData = { ...data }\r\n    delete tempData.terms\r\n    if (Object.values(tempData).every(field => field.length > 0) && data.terms === true) {\r\n      const { username, email, password } = data\r\n      useJwt\r\n        .register({ username, email, password })\r\n        .then(res => {\r\n          if (res.data.error) {\r\n            for (const property in res.data.error) {\r\n              if (res.data.error[property] !== null) {\r\n                setError(property, {\r\n                  type: 'manual',\r\n                  message: res.data.error[property]\r\n                })\r\n              }\r\n            }\r\n          } else {\r\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\r\n            ability.update(res.data.user.ability)\r\n            dispatch(handleLogin(data))\r\n            navigate('/')\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual',\r\n            message: `Please enter a valid ${key}`\r\n          })\r\n        }\r\n        if (key === 'terms' && data.terms === false) {\r\n          setError('terms', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Adventure starts here 🚀\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n\r\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Controller\r\n                  id='username'\r\n                  name='username'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input autoFocus placeholder='johndoe' invalid={errors.username && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.username ? <FormFeedback>{errors.username.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='email'\r\n                  name='email'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input type='email' placeholder='john@example.com' invalid={errors.email && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.email ? <FormFeedback>{errors.email.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Controller\r\n                  name='terms'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='terms' type='checkbox' checked={field.value} invalid={errors.terms && true} />\r\n                  )}\r\n                />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' block color='primary'>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/login'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"sourceRoot":""}