{"version":3,"sources":["@core/components/input-password-toggle/index.js","views/pages/authentication/RegisterBasic.js"],"names":["InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","size","renderIcon","defaultProps","RegisterBasic","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","tag","onSubmit","autoFocus","href","color","block"],"mappings":"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","file":"static/js/21.3845d0ec.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst RegisterBasic = () => {\r\n  return (\r\n    <div className='auth-wrapper auth-basic px-2'>\r\n      <div className='auth-inner my-2'>\r\n        <Card className='mb-0'>\r\n          <CardBody>\r\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n              <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n                <defs>\r\n                  <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                    <stop stopColor='#000000' offset='0%'></stop>\r\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                  </linearGradient>\r\n                  <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                    <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                  </linearGradient>\r\n                </defs>\r\n                <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n                  <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                    <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                      <path\r\n                        d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                        id='Path'\r\n                        className='text-primary'\r\n                        style={{ fill: 'currentColor' }}\r\n                      ></path>\r\n                      <path\r\n                        d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                        id='Path'\r\n                        fill='url(#linearGradient-1)'\r\n                        opacity='0.2'\r\n                      ></path>\r\n                      <polygon\r\n                        id='Path-2'\r\n                        fill='#000000'\r\n                        opacity='0.049999997'\r\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                      ></polygon>\r\n                      <polygon\r\n                        id='Path-2'\r\n                        fill='#000000'\r\n                        opacity='0.099999994'\r\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                      ></polygon>\r\n                      <polygon\r\n                        id='Path-3'\r\n                        fill='url(#linearGradient-2)'\r\n                        opacity='0.099999994'\r\n                        points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                      ></polygon>\r\n                    </g>\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n              <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n            </Link>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n              Adventure starts here 🚀\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n            <Form className='auth-register-form mt-2' onSubmit={e => e.preventDefault()}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Input type='text' id='register-username' placeholder='johndoe' autoFocus />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Input type='email' id='register-email' placeholder='john@example.com' />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <InputPasswordToggle className='input-group-merge' id='register-password' />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='terms' />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button color='primary' block>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/pages/login-basic'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterBasic\r\n"],"sourceRoot":""}