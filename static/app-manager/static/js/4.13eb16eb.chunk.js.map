{"version":3,"sources":["@core/components/input-password-toggle/index.js","views/pages/authentication/Login.js"],"names":["InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","size","renderIcon","defaultProps","ToastContent","t","name","role","color","icon","toast","dismiss","defaultValues","password","loginEmail","Login","skin","useSkin","dispatch","useDispatch","navigate","useNavigate","ability","useContext","AbilityContext","useForm","control","setError","handleSubmit","errors","formState","illustration","source","require","default","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","top","right","target","placement","onSubmit","data","Object","values","every","field","length","useJwt","login","email","then","res","userData","accessToken","refreshToken","handleLogin","update","getHomeRouteForLoggedInUser","fullName","username","catch","err","console","log","key","render","autoFocus","block"],"mappings":"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","file":"static/js/4.13eb16eb.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\n// ** Third Party Components\r\nimport toast from 'react-hot-toast'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee, X } from 'react-feather'\r\n\r\n// ** Actions\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Utils\r\nimport { getHomeRouteForLoggedInUser } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Form, Input, Label, Alert, Button, CardText, CardTitle, UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst ToastContent = ({ t, name, role }) => {\r\n  return (\r\n    <div className='d-flex'>\r\n      <div className='me-1'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n      </div>\r\n      <div className='d-flex flex-column'>\r\n        <div className='d-flex justify-content-between'>\r\n          <h6>{name}</h6>\r\n          <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\r\n        </div>\r\n        <span>You have successfully logged in as an {role} user to Vuexy. Now you can start to explore. Enjoy!</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst defaultValues = {\r\n  password: 'admin',\r\n  loginEmail: 'admin@demo.com'\r\n}\r\n\r\nconst Login = () => {\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const ability = useContext(AbilityContext)\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    if (Object.values(data).every(field => field.length > 0)) {\r\n      useJwt\r\n        .login({ email: data.loginEmail, password: data.password })\r\n        .then(res => {\r\n          const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n          dispatch(handleLogin(data))\r\n          ability.update(res.data.userData.ability)\r\n          navigate(getHomeRouteForLoggedInUser(data.role))\r\n          toast(t => (\r\n            <ToastContent t={t} role={data.role || 'admin'} name={data.fullName || data.username || 'John Doe'} />\r\n          ))\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Welcome to Vuexy! 👋\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\r\n            <Alert color='primary'>\r\n              <div className='alert-body font-small-2'>\r\n                <p>\r\n                  <small className='me-50'>\r\n                    <span className='fw-bold'>Admin:</span> admin@demo.com | admin\r\n                  </small>\r\n                </p>\r\n                <p>\r\n                  <small className='me-50'>\r\n                    <span className='fw-bold'>Client:</span> client@demo.com | client\r\n                  </small>\r\n                </p>\r\n              </div>\r\n              <HelpCircle\r\n                id='login-tip'\r\n                className='position-absolute'\r\n                size={18}\r\n                style={{ top: '10px', right: '10px' }}\r\n              />\r\n              <UncontrolledTooltip target='login-tip' placement='left'>\r\n                This is just for ACL demo purpose.\r\n              </UncontrolledTooltip>\r\n            </Alert>\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='loginEmail'\r\n                  name='loginEmail'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      autoFocus\r\n                      type='email'\r\n                      placeholder='john@example.com'\r\n                      invalid={errors.loginEmail && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                  <Link to='/forgot-password'>\r\n                    <small>Forgot Password?</small>\r\n                  </Link>\r\n                </div>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='remember-me' />\r\n                <Label className='form-check-label' for='remember-me'>\r\n                  Remember Me\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' color='primary' block>\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>New on our platform?</span>\r\n              <Link to='/register'>\r\n                <span>Create an account</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}